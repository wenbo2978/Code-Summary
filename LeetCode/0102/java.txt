/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<List<Integer>> res = new ArrayList<>();
        if(root == null)
            return res;
        queue.offer(root);
        
        while(!queue.isEmpty()){
            int n = queue.size();
            System.out.println(n);
            List<Integer> list = new ArrayList<>();
            while(n > 0){
                TreeNode t = queue.peek();
                queue.poll();
                //System.out.println(t.val);
                list.add(t.val);
                if(t.left != null)
                    queue.offer(t.left);
                if(t.right != null)
                    queue.offer(t.right);
                n--;
            }
            res.add(list);
        }
        return res;
    }
}