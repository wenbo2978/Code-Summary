/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == nullptr)
            return head;
        if(head->next == nullptr)
            return head;
        ListNode* ans = new ListNode();
        ListNode* preNode = head;
        ans->next = head;
        int pre = preNode->val;
        while(head->next!= nullptr){
            head=head->next;
            if(pre != head->val){
                pre = head->val;
                preNode = head;
            }else{
                if(head->next!=nullptr){
                    preNode->next = head->next;
                }else{
                    preNode->next=nullptr;
                }
            }
        }
        return ans->next;
    }
};