/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minHeight(TreeNode* root){
        if(root->left == nullptr && root->right == nullptr)
            return 1;
        if(root->left != nullptr && root -> right != nullptr){
            int l = minHeight(root->left);
            int r = minHeight(root->right);
            return 1 + min(l, r);
        }else{
            if(root->right != nullptr){
                return minHeight(root->right) + 1;
            }else{
                return minHeight(root->left) + 1;
            }
        }
    }
    int minDepth(TreeNode* root) {
        if(root == nullptr)
            return 0;
        return minHeight(root);
    }
};