class Solution {
    public int longestSubarray(int[] nums, int limit) {
        LinkedList<Integer> ascArr = new LinkedList<>();
        LinkedList<Integer> descArr = new LinkedList<>();
        int res = 0;
        int left = 0;
        for(int i = 0; i < nums.length; i ++){
            int n = nums[i];
            while(ascArr.size() > 0 && n < ascArr.getLast()){
                ascArr.removeLast();
            }
            ascArr.add(n);
            while(descArr.size() > 0 && n > descArr.getLast()){
                descArr.removeLast();
            }
            descArr.add(n);

            while(descArr.getFirst() - ascArr.getFirst() > limit){
                if(nums[left] == descArr.getFirst()){
                    descArr.removeFirst();
                }
                if(nums[left] == ascArr.getFirst()){
                    ascArr.removeFirst();
                }
                left ++;
            }
            int size = i - left + 1;
            res = Math.max(res, size);
        }
        return res;
    }
}