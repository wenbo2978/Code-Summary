class MinStack {
public:
    stack<int> st;
    unordered_map<int, vector<int>> mp;
    int m = INT_MAX;
    MinStack() {
        
    }
    
    void push(int val) {
        st.push(val);
        m = min(val, m);
        mp[val].push_back(m);
    }
    
    void pop() {
        int k = st.top();
        st.pop();
        mp[k].pop_back();
        if(st.empty()){
            m = INT_MAX;
        }else{
            m = mp[st.top()][mp[st.top()].size() - 1];
        }
        
    }
    
    int top() {
        return st.top();
    }
    
    int getMin() {
        return mp[st.top()][mp[st.top()].size() - 1];
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */