/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int goodNodes(TreeNode* root) {
        int ans = 1;
        stack<TreeNode*> st;
        st.push(root);
        while(!st.empty()){
            TreeNode* tmp = st.top();
            st.pop();
            if(tmp->right != nullptr){
                if(tmp->right->val >= tmp->val){
                    ans++;
                }
                tmp->right->val = max(tmp->right->val, tmp->val);
                st.push(tmp->right);
            }
            if(tmp->left != nullptr){
                if(tmp->left->val >= tmp->val){
                    ans++;
                }
                tmp->left->val = max(tmp->left->val, tmp->val);
                st.push(tmp->left);
            }

        }
        return ans;
    }
};