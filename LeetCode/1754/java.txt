class Solution {
    public String largestMerge(String word1, String word2) {
        StringBuilder res = new StringBuilder("");
        int n1 = 0, n2 = 0;
        while(n1 < word1.length() && n2 < word2.length()){
            if(word1.charAt(n1) > word2.charAt(n2)){
                res.append(word1.charAt(n1));
                n1++;
            }else if(word1.charAt(n1) < word2.charAt(n2)){
                res.append(word2.charAt(n2));
                n2++;
            }else{
                int len = 1;
                boolean isFind = false;
                while(n1 + len < word1.length() && n2 + len < word2.length()){
                    if(word1.charAt(n1 + len) > word2.charAt(n2 + len)){
                        /*res.append(word1.substring(n1, len + 1));
                        n1 += (len + 1);
                        isFind = true;
                        break;*/
                        res.append(word1.charAt(n1));
                        n1++;
                        isFind = true;
                        break;
                    }else if(word1.charAt(n1 + len) < word2.charAt(n2 + len)){
                        /*res.append(word2.substring(n2, len + 1));
                        n2 += (len + 1);
                        isFind = true;
                        break;*/
                        res.append(word2.charAt(n2));
                        n2++;
                        isFind = true;
                        break;
                    }
                    len ++;
                }
                if(isFind == false){
                    if(n1 + len == word1.length()){
                        res.append(word2.charAt(n2));
                        n2 ++;
                    }else{
                        res.append(word1.charAt(n1));
                        n1 ++;
                    }
                }
            }
        }
        while(n1 < word1.length()){
            res.append(word1.charAt(n1));
            n1 ++;
        }
        while(n2 < word2.length()){
            res.append(word2.charAt(n2));
            n2 ++;
        }
        return res.toString();
    }
}