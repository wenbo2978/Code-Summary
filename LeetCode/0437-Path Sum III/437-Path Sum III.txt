/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root, int targetSum, int &ans, vector<int> rec){
        if(root == nullptr)
            return;
        rec.push_back(root->val);
        solve(root->left, targetSum, ans, rec);
        solve(root->right, targetSum, ans, rec);
        long long res = 0;
        for(int i = rec.size() - 1; i >= 0; i --){
            res += rec[i];
            if(res == targetSum)
                ans ++;
        }
        rec.pop_back();
    }
    int pathSum(TreeNode* root, int targetSum) {
        vector<int> rec;
        int ans = 0;
        solve(root, targetSum, ans, rec);
        return ans;
    }
};