/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pseudoPalindromicPaths (TreeNode* root) {
        int res = 0;
        vector<int> path(9, 0);
        preorderTraverse(root, path, res);
        return res;
    }

    void preorderTraverse(TreeNode* root, vector<int>& path, int& res){
        path[root->val - 1] ++;
        if(root->left == nullptr && root->right == nullptr){
            int odd = 0;
            for(int i = 0; i < path.size(); i ++){
                if(path[i] % 2 != 0){
                    odd ++;
                }
            }
            if(odd == 1 || odd == 0)
                res ++;
            
        }
        if(root->left != nullptr){
            preorderTraverse(root->left, path, res);
            path[root->left->val - 1] --;
        }
        if(root->right != nullptr){
            preorderTraverse(root->right, path, res);
            path[root->right->val - 1] --;
        }
        
        
    }
};