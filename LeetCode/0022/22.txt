class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        //string path = "";
        backtrack(n, res, "", 0);
        return res;
    }

    void backtrack(int n, vector<string>& res, string path, int balance){
        //cout << path << endl;

        if(n == 0 && balance == 0){
            res.push_back(path);
            return;
        }
        
        if(n > 0){
            backtrack(n - 1, res, path + "(", balance + 1);
            
        }
        
        if(balance > 0){
            backtrack(n, res, path + ")", balance - 1);
        }
        
    }
};