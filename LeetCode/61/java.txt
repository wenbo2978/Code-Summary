/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        ListNode ft = head;
        int len = 0;
        while(ft != null){
            len ++;
            ft = ft.next;
        }
        if(len == 0)
            return head;
        k = k % len;
        if(k == 0)
            return head;
        ListNode ans = new ListNode();
        ft = head;
        for(int i = 1; i < len - k; i ++){
            ft = ft.next;
        }
        ans.next = ft.next;
        ft.next = null;
        ListNode tmp = ans.next;
        while(tmp != null && tmp.next != null)
            tmp = tmp.next;
        tmp.next = head;
        return ans.next;
    }
}