/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void countSum(int prenumber, TreeNode* root, bool& flag, int targetSum){
        if(root->val + prenumber == targetSum && root->left == nullptr && root->right == nullptr){
            flag = true;
            return;
        }
        if(root->left != nullptr){
            countSum(prenumber + root->val, root->left, flag, targetSum);
        }
        if(root->right != nullptr){
            countSum(prenumber + root->val, root->right, flag, targetSum);
        }
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root == nullptr)
            return false;
        bool flag = false;
        countSum(0, root, flag, targetSum);
        return flag;
    }
};