/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        if(head == null || head.next == null)
            return head;
        ListNode res = new ListNode();
        res.next = head;
        ListNode pre, cur;
       
        pre = res;
        while(pre != null && pre.next != null){
            
            if(pre.next.val >= x){
                //cur = pre.next;
                break;
            }
            pre = pre.next;
        }
        
        cur = pre.next;
        //System.out.println(cur.val);
        ListNode tmp = cur;
        while(tmp != null && tmp.next != null){
            if(tmp.next.val < x){
                ListNode moveNode = tmp.next;
                tmp.next = moveNode.next;
                pre.next = moveNode;
                moveNode.next = cur;
                pre = pre.next;
            }else{
                tmp = tmp.next;
            }
            
        }
        
        return res.next;
    }
}