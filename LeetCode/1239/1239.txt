class Solution {
public:
    int maxLength(vector<string>& arr) {
        int maxLength = 0;
        backtrack(arr, 0, 0, maxLength);
        return maxLength;
    }

    void backtrack(vector<string>& arr, int index, int charSet, int& maxLength){
        if(index == arr.size()){
            int count = 0;
            for(int i = 0; i < 26; i ++){
                if((charSet & (1 << i)) != 0){
                    count ++;
                }
            }
            maxLength = max(maxLength, count);
            return;
        }
        int newCharSet = charSet;
        bool isValid = true;
        for(char ch : arr[index]){
            int bit = 1 << (ch - 'a');
            if((newCharSet & bit) == 0){
                newCharSet |= bit;
            }else{
                isValid = false;
                break;
            }
        }

        if(isValid){
            backtrack(arr, index + 1, newCharSet, maxLength);
        }

        backtrack(arr, index + 1, charSet, maxLength);
    }
};