class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        Queue<List<Integer>> pq = new PriorityQueue<>(
            (a, b) -> a.get(0) + a.get(1) - b.get(1) - b.get(0)
        );
        List<List<Integer>> res = new ArrayList<>();
        if(nums1.length == 0 || nums2.length == 0 || k == 0)
            return res;
        for(int i = 0; i < nums1.length && i < k; i ++){
            List<Integer> list = new ArrayList<>();
            list.add(nums1[i]);
            list.add(nums2[0]);
            list.add(0);
            pq.offer(list);
        }

        while(k-- > 0 && !pq.isEmpty()){
            int v1 = pq.peek().get(0);
            int v2 = pq.peek().get(1);
            int pos = pq.peek().get(2);
            pq.poll();
            List<Integer> list1 = new ArrayList<>();
            list1.add(v1);
            list1.add(v2);
            res.add(list1);
            if(pos < nums2.length - 1){
                List<Integer> list = new ArrayList<>();
                list.add(v1);
                list.add(nums2[pos + 1]);
                list.add(pos + 1);
                pq.offer(list);
            }
            

        }
        return res;
    }
}