class SmallestInfiniteSet {
public:

    int count = 0;
    priority_queue<int, vector<int>, greater<int>> addq;
    map<int, int> mp;
    

    SmallestInfiniteSet() {
        count = 0;
    }
    
    int popSmallest() {
        if(addq.empty()){
            count++;
            return count;
        }else{
            int ans = addq.top();
            addq.pop();
            mp[ans] = 0;
            return ans;
        }
    }
    
    void addBack(int num) {
        if(num > count){
            return;
        }else{
            if(mp.find(num) == mp.end()){
                addq.push(num);
                mp.insert(pair<int,int>(num,1));
            }else{
                if(mp[num] == 0){
                    addq.push(num);
                    mp[num] = 1;
                }
            }
        }
    }
};

/**
 * Your SmallestInfiniteSet object will be instantiated and called as such:
 * SmallestInfiniteSet* obj = new SmallestInfiniteSet();
 * int param_1 = obj->popSmallest();
 * obj->addBack(num);
 */