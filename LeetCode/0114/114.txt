/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
        inOrderTraversal(root);
    }

    public void inOrderTraversal(TreeNode root){
        if(root == null)
            return;
        
        inOrderTraversal(root.left);
        
        TreeNode left = root.left;
        TreeNode right = root.right;
        if(left != null && right != null){
            root.right = left;
            root.left = null;
            if(left.right == null){
                left.right = right;
            }else{
                TreeNode nextright = left.right;
                while(nextright.right != null){
                    nextright = nextright.right;
                }
                nextright.right = right;
            }   
        }else if(left != null){
            root.right = left;
            root.left = null;
        }
        
        inOrderTraversal(root.right);
    }
}