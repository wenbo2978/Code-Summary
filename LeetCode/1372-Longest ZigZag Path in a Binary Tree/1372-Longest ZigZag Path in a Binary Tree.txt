/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countNumber(TreeNode* root, int position, int ans){
        int left = 0, right = 0;
        if(position == 0){
            if(root -> left != nullptr)
                left = countNumber(root->left, -1, ans + 1);
            if(root->right!=nullptr)
                right = countNumber(root->right, 1, ans + 1);
        }else if(position == -1){
            if(root -> left != nullptr)
                left = countNumber(root->left, -1, 1);
            if(root->right!=nullptr)
                right = countNumber(root->right, 1, ans + 1);
        }else if(position == 1){
            if(root -> left != nullptr)
                left = countNumber(root->left, -1, ans + 1);
            if(root->right!=nullptr)
                right = countNumber(root->right, 1, 1);
        }
        return max(max(left, right), ans);
    }
    int longestZigZag(TreeNode* root) {
        return countNumber(root, 0, 0);
    }
};