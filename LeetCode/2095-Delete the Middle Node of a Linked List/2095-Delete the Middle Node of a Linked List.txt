/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        ListNode* ans = new ListNode();
        ans -> next = head;
        int length = 0;
        while(head -> next != nullptr){
            head = head->next;
            length ++;
        }
        length ++;
        ListNode* tmp = ans->next;
        for(int i = 0; i < (length) / 2 - 1; i ++){
            tmp = tmp ->next;
        }
        
        if(length == 1){
            return nullptr;
        }
        if(length == 2){
            ans -> next -> next = nullptr;
            return ans -> next;
        }
        tmp -> next = tmp->next->next;
        return ans->next;
    }
};