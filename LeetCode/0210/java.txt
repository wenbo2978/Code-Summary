class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        List<Integer>[] adj = new List[numCourses];
        int[] indegree = new int[numCourses];
        int[] ans = new int[numCourses];
        for(int i = 0; i < prerequisites.length; i ++){
            int course = prerequisites[i][0];
            int pre = prerequisites[i][1];
            if(adj[pre] == null){
                adj[pre] = new ArrayList<>();
            }
            adj[pre].add(course);
            indegree[course] ++;
        }

        Queue<Integer> q = new LinkedList<>();
        for(int i = 0; i < numCourses; i ++){
            if(indegree[i] == 0){
                //System.out.println(i);
                q.offer(i);
            }
        }
        int n = 0;
        while(!q.isEmpty()){
            int course = q.poll();
            ans[n] = course;
            n ++;
            if(adj[course] != null){
                for(int next : adj[course]){
                    indegree[next] --;
                    if(indegree[next] == 0){
                        q.offer(next);
                    }
                }
            }
            
        }

        if(n == numCourses){
            return ans;
        }else{
            return new int[0];
        }
        
    }
}