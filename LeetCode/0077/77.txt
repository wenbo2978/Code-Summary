class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> res;
        vector<int> path;
        backtrack(res, path, n, 1, k);
        return res;
    }

    void backtrack(vector<vector<int>>& res, vector<int>& path, int n, int t, int k){
       
        if(path.size() == k){
            res.push_back(path);
            return;
        }
         if(t > n)
            return;
        
        //for(int i = t; i <= n; i ++){
            //printf("%d\n", path.size());
        path.push_back(t);
        backtrack(res, path, n, t + 1, k);
        path.pop_back();
        backtrack(res, path, n, t + 1, k);
        //}
        
        
    }
};