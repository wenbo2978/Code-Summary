/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* la = list1;
        ListNode* lb = list1;
        ListNode* last = list2;
        while(last -> next){
            last = last -> next;
        }
        int initiala =a, initialb = b;
        while(1){
            if(a > 1){
                a --;
                la = la -> next;
            }
            if(b >= 0){
                b --;
                lb = lb -> next;
            }else{
                break;
            }
        }
        //printf("%d %d\n", la-> val, lb -> val);
        if(initiala == 0){
            last -> next = lb;
            return list2;
        }else{
            la -> next = list2;
            last -> next = lb;
        }
        return list1;
    }
};