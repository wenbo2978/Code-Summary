class Solution {
public:
    void dfs(vector<vector<int>>& isConnected, int city, vector<int> &visited){
        if(visited[city] == 1){
            return;
        }
        visited[city] = 1;
        for(int i = 0; i < isConnected.size(); i ++){
            if(isConnected[city][i] == 1)
                dfs(isConnected, i, visited);
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int ans = 0;
        vector<int> visited(isConnected.size(), -1);
        for(int i = 0; i < visited.size(); i ++){
            if(visited[i] == -1){
                dfs(isConnected, i, visited);
                ans ++;
            }
        }
        return ans;
    }
};