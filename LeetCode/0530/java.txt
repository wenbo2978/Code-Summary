/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int getMinimumDifference(TreeNode root) {
        int[] ans = new int[1];
        ans[0] = Integer.MAX_VALUE;
        int[] pre = new int[1];
        pre[0] = -1;
        inOrder(root, pre, ans);
        return ans[0];
    }

    private void inOrder(TreeNode root, int[] pre, int[] ans){
        if(root == null)
            return;
        inOrder(root.left, pre, ans);
        if(pre[0] == -1){
            pre[0] = root.val;
        }else{
            ans[0] = Math.min(ans[0], root.val - pre[0]);
            pre[0] = root.val;
        }
        inOrder(root.right, pre, ans);

    }
}