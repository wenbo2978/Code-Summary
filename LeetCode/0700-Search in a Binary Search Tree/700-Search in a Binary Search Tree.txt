/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        stack<TreeNode*> st;
        vector<int> ans;
        st.push(root);
        int flag = 0;
        TreeNode* target;
        while(!st.empty()){
            TreeNode* tmp = st.top();
            st.pop();
            if(tmp->val == val){
                return tmp;
                target = st.top();
                break;
            }else{
                if(tmp->right != nullptr)
                    st.push(tmp->right);
                if(tmp->left!=nullptr)
                    st.push(tmp->left);
            }
        }
        return nullptr;
    }
};