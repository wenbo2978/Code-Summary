/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        int[] ans = new int[2];
        ans[0] = 0;
        ans[1] = 0;
        preOrderTraverse(root, ans);
        return ans[0];
    }

    public void preOrderTraverse(TreeNode root, int[] ans){
        if(root == null)
            return;
        if(root.right == null && root.left == null && ans[1] == -1){
            ans[0] += root.val;
        }
        if(root.left != null){
            int tmp = ans[1];
            ans[1] = -1;
            preOrderTraverse(root.left, ans);
            ans[1] = tmp;
        }
        if(root.right != null){
            int tmp = ans[1];
            ans[1] = 1;
            preOrderTraverse(root.right, ans);
            ans[1] = tmp;
        }
        
        
    }
}